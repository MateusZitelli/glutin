initSidebarItems({"enum":[["WlKeyboardEvent",""],["WlKeyboardKeyState","physical key stateDescribes the physical state of a key which provoked the key event."],["WlKeyboardKeymapFormat","keyboard mapping formatThis specifies the format of the keymap provided to the client with the wl_keyboard.keymap event."],["WlPointerAxis","axis typesDescribes the axis types of scroll events."],["WlPointerButtonState","physical button stateDescribes the physical state of a button which provoked the button event."],["WlPointerEvent",""],["WlSeatEvent",""],["WlTouchEvent",""]],"mod":[["WlSeatCapability","seat capability bitmaskThis is a bitmask of capabilities this seat has; if a member is set, then it is present on the seat."]],"struct":[["WlKeyboard","keyboard input deviceThe wl_keyboard interface represents one or more keyboards associated with a seat."],["WlPointer","pointer input deviceThe wl_pointer interface represents one or more input devices, such as mice, which control the pointer location and pointer_focus of a seat.The wl_pointer interface generates motion, enter and leave events for the surfaces that the pointer is located over, and button and axis events for button presses, button releases and scrolling."],["WlSeat","group of input devicesA seat is a group of keyboards, pointer and touch devices. This object is published as a global during start up, or when such a device is hot plugged.  A seat typically has a pointer and maintains a keyboard focus and a pointer focus."],["WlTouch","touchscreen input deviceThe wl_touch interface represents a touchscreen associated with a seat.Touch interactions can consist of one or more contacts. For each contact, a series of events is generated, starting with a down event, followed by zero or more motion events, and ending with an up event. Events relating to the same contact point can be identified by the ID of the sequence."]]});